name: CI Spring with Gradle

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  spring-gradle:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: 'true'
          jacoco-csv-file: 'build/reports/jacocoHtml/test/jacocoTestReport.csv'

      - name: Extract coverage from JaCoCo XML
        run: |
          COVERAGE=$(xmllint --xpath "string(/report/counter[@type='INSTRUCTION']/@covered)" build/reports/jacocoHtml/test/jacocoTestReport.xml)
          TOTAL=$(xmllint --xpath "string(/report/counter[@type='INSTRUCTION']/@missed)" build/reports/jacocoHtml/test/jacocoTestReport.xml)
          COVERAGE_PERCENTAGE=$(awk "BEGIN {printf \"%.2f\", $COVERAGE / ($COVERAGE + $TOTAL) * 100}")
          echo "COVERAGE_PERCENTAGE=$COVERAGE_PERCENTAGE" >> $GITHUB_ENV

      - name: Upload JaCoCo CSV Report
        uses: actions/upload-artifact@v4
        with:
          name: 'jacoco-report'
          path: 'build/reports/jacocoHtml/test/jacocoTestReport.csv'

      - name: Send notificacion to Discord
        if: always()
        run: |
          curl -F "file=@build/reports/jacocoHtml/test/jacocoTestReport.csv" \
               -F "payload_json={\"content\": \"üìä **Coverage Test:** ${{ env.COVERAGE_PERCENTAGE }}%\nüîç Reporte de cobertura adjunto en .csv\"}" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}